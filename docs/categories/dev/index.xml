<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dev on DevelOtters.com</title><link>https://develotters.com/categories/dev/</link><description>Recent content in dev on DevelOtters.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 12 Jun 2021 00:00:14 -0700</lastBuildDate><atom:link href="https://develotters.com/categories/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>How Not to Measure Elapsed Time</title><link>https://develotters.com/posts/how-not-to-measure-elapsed-time/</link><pubDate>Sat, 12 Jun 2021 00:00:14 -0700</pubDate><guid>https://develotters.com/posts/how-not-to-measure-elapsed-time/</guid><description>&lt;p>The rabbit hole goes infinitely deep if you want to do latency measurements, benchmarking, and performance testing/tuning/analysis. They are very hard to do right and it is very easy to mess them up. In this post, I would like to show you a very common mistake (that is just 0.000001‰ of the tip of the iceberg) and an extremely simple solution to fix it.&lt;/p></description></item><item><title>Confusing Java Strings</title><link>https://develotters.com/posts/confusing-java-strings/</link><pubDate>Sun, 20 Dec 2020 15:19:46 -0800</pubDate><guid>https://develotters.com/posts/confusing-java-strings/</guid><description>&lt;p>In this article, I would like to show you a couple of confusing things in connection with Java &lt;code>String&lt;/code>s and give you a few suggestions to avoid issues with them. I also prepared a GitHub repo for you where you can find some code that you can use to try the examples out on your own: &lt;a href="https://github.com/jonatan-ivanov/java-strings-demo">github.com/jonatan-ivanov/java-strings-demo&lt;/a>.&lt;/p></description></item><item><title>The Most Common Concurrency Issues and How to Fix Them: Part 4</title><link>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-4/</link><pubDate>Thu, 27 Aug 2020 09:00:00 -0700</pubDate><guid>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-4/</guid><description>&lt;p>In the previous parts (&lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1">one&lt;/a>, &lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-2">two&lt;/a>, &lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-3">three&lt;/a>) of the series, I showed you a simple class that has three concurrency issues and I also explained these issues. In this final post, I would like to explain the tests I wrote to show the issues in action. Please let me know if you have any ideas for improving the tests.&lt;/p></description></item><item><title>The Most Common Concurrency Issues and How to Fix Them: Part 3</title><link>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-3/</link><pubDate>Mon, 24 Aug 2020 19:20:00 -0700</pubDate><guid>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-3/</guid><description>&lt;p>In the &lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1/">first part&lt;/a> of the series, I showed you a simple class which has three concurrency issues. In the &lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-2/">second one&lt;/a>, I explained the first issue: Race Condition. In this post, I would like to explain the rest of them.
By the end of the series, you will understand their basic mechanism, you will be able to identify them and I will give you a couple of advice on how to fix them.&lt;/p>
&lt;p>I wrote a few tests to demonstrate two of the issues, the third one is tough, please let me know if you have any idea how can it be tested. I&amp;rsquo;m also interested if you have any ideas for improvements for the existing tests because…&lt;br>
…well, keep reading and you will see. :)&lt;/p></description></item><item><title>The Most Common Concurrency Issues and How to Fix Them: Part 2</title><link>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-2/</link><pubDate>Sat, 22 Aug 2020 12:00:00 -0700</pubDate><guid>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-2/</guid><description>&lt;p>In the &lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1">first part&lt;/a> of the series, I showed you a simple class which has three concurrency issues. In this post, I would like to explain the first issue.
By the end of the series, you will understand their basic mechanism, you will be able to identify them and I will give you a couple of advice on how to fix them.&lt;/p></description></item><item><title>The Most Common Concurrency Issues and How to Fix Them: Part 1</title><link>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1/</link><pubDate>Thu, 20 Aug 2020 17:00:00 -0700</pubDate><guid>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1/</guid><description>&lt;p>The goal of this example-driven series of articles is explaining, demonstrating, and testing (the fun part) the two most frequent (in my opinion) concurrency mistakes in Java (plus an interesting third one), also giving you a few suggestions to fix them.&lt;/p>
&lt;p>By the end of the series, you will understand their basic mechanism, you will be able to identify them and I will give you a couple of advice on how to fix them.&lt;/p></description></item><item><title>Terminal Fun: Basic Utils Part 3</title><link>https://develotters.com/posts/terminal-fun-basic-utils-part-3/</link><pubDate>Wed, 24 Jun 2020 12:13:11 -0700</pubDate><guid>https://develotters.com/posts/terminal-fun-basic-utils-part-3/</guid><description>&lt;p>This is the third post of a series where I want to give some tips and tricks for the Terminal/CLI.&lt;br>
You might want to check out the &lt;a href="https://develotters.com/posts/terminal-fun-basic-utils/">first&lt;/a> and the &lt;a href="https://develotters.com/posts/terminal-fun-basic-utils-part-2/">second&lt;/a> posts.
As previously, buckle-up, put your helmet on, grab a &amp;hellip; frying pan and have fun.&lt;/p></description></item><item><title>Terminal Fun: Basic Utils Part 2</title><link>https://develotters.com/posts/terminal-fun-basic-utils-part-2/</link><pubDate>Wed, 17 Jun 2020 23:28:50 -0700</pubDate><guid>https://develotters.com/posts/terminal-fun-basic-utils-part-2/</guid><description>&lt;p>This is the second post of a series where I want to give some tips and tricks for the Terminal/CLI.&lt;br>
In the &lt;a href="https://develotters.com/posts/terminal-fun-basic-utils/">first post&lt;/a>, I showed a few very handy tools like &lt;code>bat&lt;/code>, &lt;code>exa&lt;/code>, &lt;code>multitail&lt;/code>, &lt;code>diff-so-fancy&lt;/code>, &lt;code>delta&lt;/code>, &lt;code>prettyping&lt;/code> and &lt;code>htop&lt;/code>/&lt;code>gtop&lt;/code>/&lt;code>vtop&lt;/code>.&lt;br>
This post is going to be a little longer so buckle-up, put your helmet on, grab a &amp;hellip; frying pan and have fun.&lt;/p></description></item><item><title>Terminal Fun: Basic Utils</title><link>https://develotters.com/posts/terminal-fun-basic-utils/</link><pubDate>Sat, 30 May 2020 16:38:53 -0700</pubDate><guid>https://develotters.com/posts/terminal-fun-basic-utils/</guid><description>&lt;p>This is the first post of a series where I want to give tips and trick for the Terminal/CLI, have fun:&lt;/p>
&lt;ul>
&lt;li>&lt;code>bat&lt;/code> and &lt;code>cat&lt;/code>&lt;/li>
&lt;li>&lt;code>exa&lt;/code> and &lt;code>ls&lt;/code>&lt;/li>
&lt;li>&lt;code>multitail&lt;/code> and &lt;code>tail&lt;/code>&lt;/li>
&lt;li>&lt;code>diff-so-fancy&lt;/code>, &lt;code>delta&lt;/code> and &lt;code>git diff&lt;/code>&lt;/li>
&lt;li>&lt;code>prettyping&lt;/code> and &lt;code>ping&lt;/code>&lt;/li>
&lt;li>&lt;code>htop&lt;/code>/&lt;code>gtop&lt;/code>/&lt;code>vtop&lt;/code> and &lt;code>top&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>How to Build a Blog Like This: Deploy</title><link>https://develotters.com/posts/how-to-build-a-blog-deploy/</link><pubDate>Wed, 20 May 2020 23:45:02 -0700</pubDate><guid>https://develotters.com/posts/how-to-build-a-blog-deploy/</guid><description>&lt;p>This is the third post of a series, you might want to check the previous articles: (&lt;a href="https://develotters.com/posts/how-to-build-a-blog-intro/">Intro&lt;/a> and &lt;a href="https://develotters.com/posts/how-to-build-a-blog-content/">Content&lt;/a>) before reading this.&lt;/p>
&lt;p>Since we only have static files, we only need a simple web server to serve the site. It can be self-hosted or hosted on a cheap Webhosting solution and there are other cool options, like:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://pages.github.com/">GitHub Pages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://about.gitlab.com/stages-devops-lifecycle/pages/">GitLab Pages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/s3/">Amazon S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://azure.microsoft.com/">Azure Storage&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/storage/">Google Cloud Storage&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.netlify.com/">Netlify&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://firebase.google.com/docs/hosting">Firebase&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>How to Build a Blog Like This: Content</title><link>https://develotters.com/posts/how-to-build-a-blog-content/</link><pubDate>Wed, 20 May 2020 20:03:16 -0700</pubDate><guid>https://develotters.com/posts/how-to-build-a-blog-content/</guid><description>&lt;p>This is the second post of a series, you might want to check the first article (&lt;a href="https://develotters.com/posts/how-to-build-a-blog-intro/">Intro&lt;/a>) before reading this.&lt;/p>
&lt;p>Hugo is very flexible in terms of configuration and organizing the content, you have a lot of options and you can do things in various ways. This might sound great but if you ask me, I rather like opinionated things where I don&amp;rsquo;t need to put a bunch of effort in figuring out best practices but the framework gives those to me (Convention over Configuration™). Unfortunately, this is not the case for Hugo.&lt;/p></description></item><item><title>How to Build a Blog Like This: Intro</title><link>https://develotters.com/posts/how-to-build-a-blog-intro/</link><pubDate>Mon, 18 May 2020 20:52:42 -0700</pubDate><guid>https://develotters.com/posts/how-to-build-a-blog-intro/</guid><description>&lt;p>The whole thing started with: &lt;em>&amp;ldquo;I think I want to create a blog&amp;rdquo;&lt;/em>. I had a few ones before, those were either all-in-one hosted solutions or self-installed &lt;a href="https://wordpress.org/">WordPress&lt;/a> sites. WordPress was a tempting pick this time (as always) but I&amp;rsquo;ve played a little with &lt;a href="https://jekyllrb.com/">Jekyll&lt;/a> and &lt;a href="https://gohugo.io/">Hugo&lt;/a> recently and I liked them. So I negligently threw the red button with the text &lt;em>&amp;ldquo;Deploy WordPress&amp;rdquo;&lt;/em> back to the shelf and I brought up a little toolbox that has the text &lt;a href="https://jamstack.org/">JAM Stack&lt;/a> on it from my shed (not &lt;a href="https://www.freebsd.org/doc/en_US.ISO8859-1/articles/mailing-list-faq/bikeshed.html">&lt;em>bikeshed&lt;/em>&lt;/a>), also I liked the idea of hosting the blog on &lt;a href="https://pages.github.com/">GitHub Pages&lt;/a>.&lt;/p></description></item></channel></rss>