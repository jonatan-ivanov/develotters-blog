<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>concurrency on DevelOtters.com</title><link>https://develotters.com/tags/concurrency/</link><description>Recent content in concurrency on DevelOtters.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 24 Aug 2020 19:20:00 -0700</lastBuildDate><atom:link href="https://develotters.com/tags/concurrency/index.xml" rel="self" type="application/rss+xml"/><item><title>The Most Common Concurrency Issues and How to Fix Them: Part 3</title><link>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-3/</link><pubDate>Mon, 24 Aug 2020 19:20:00 -0700</pubDate><guid>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-3/</guid><description>&lt;p>In the &lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1/">first part&lt;/a> of the series, I showed you a simple class which has three concurrency issues. In the &lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-2/">second one&lt;/a>, I explained the first issue: Race Condition. In this post, I would like to explain the rest of them.
By the end of the series, you will understand their basic mechanism, you will be able to identify them and I will give you a couple of advice on how to fix them.&lt;/p>
&lt;p>I wrote a few tests to demonstrate two of the issues, the third one is tough, please let me know if you have any idea how can it be tested. I&amp;rsquo;m also interested if you have any ideas for improvements for the existing tests because…&lt;br>
…well, keep reading and you will see. :)&lt;/p></description></item><item><title>The Most Common Concurrency Issues and How to Fix Them: Part 2</title><link>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-2/</link><pubDate>Sat, 22 Aug 2020 12:00:00 -0700</pubDate><guid>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-2/</guid><description>&lt;p>In the &lt;a href="https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1">first part&lt;/a> of the series, I showed you a simple class which has three concurrency issues. In this post, I would like to explain the first issue.
By the end of the series, you will understand their basic mechanism, you will be able to identify them and I will give you a couple of advice on how to fix them.&lt;/p></description></item><item><title>The Most Common Concurrency Issues and How to Fix Them: Part 1</title><link>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1/</link><pubDate>Thu, 20 Aug 2020 17:00:00 -0700</pubDate><guid>https://develotters.com/posts/the-most-common-concurrency-issues-and-how-to-fix-them-part-1/</guid><description>&lt;p>The goal of this example-driven series of articles is explaining, demonstrating, and testing (the fun part) the two most frequent (in my opinion) concurrency mistakes in Java (plus an interesting third one), also giving you a few suggestions to fix them.&lt;/p>
&lt;p>By the end of the series, you will understand their basic mechanism, you will be able to identify them and I will give you a couple of advice on how to fix them.&lt;/p></description></item></channel></rss>